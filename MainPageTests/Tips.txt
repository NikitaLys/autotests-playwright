- WAYS to run the tests
-- To run the test from Node sript
npm run {scriptName from package.json}
e.g. npm run tests:chrome
-- To add some params
npm run {scriptName from package.json} -- --flag
e.g. npm run tests:chrome -- --headed
-- To run the test with browser launching
npx playwright test --headed
-- To run the test in chosen browser
npx playwright test --browser=firefox
-- To run the test in all browsers
npx playwright test --browser=all
e.g. with combination
npx playwright test --headed --browser=firefox
-- To run specific test
npx playwright test tests/path.to.test

- REPORTERS
--reporter=dot return green or red dot
e.g. npm run tests:chrome --reporter=dot`
--reporter=line simple info
e.g. npm run tests:chrome --reporter=line
--reporter=list provide more info
e.g. npm run tests:chrome --reporter=list
--reporter=junit provide xml format (can be extracted)
e.g. npm run tests:chrome --reporter=junit
--reporter=html create folder with report in html
e.g. npm run tests:chrome --reporter=html
(can be runned in the localhost by npx playwright show report)

- CSS Selectors
// await page.click('button')
// await page.click('#id')
// await page.click('.class')

// Only visible CSS Selector
// await page.click('.class:visible')

// Xpath
// await page.click('//button')

// To assert NOT existing element
// NB! To assert varriable must be given
// var someLocator = await page.locator('someElement')
// await expect(someLocator).not.toBeVisible()

-- Annotations
// To skip test
// test.skip("some test")...
// To run only one or few tests
// test.only("some test")...

-- Tagging
// To run tagged test
// npx playwright test --grep @tag

-- Test suite
// test.describe("Test suite",() =>{
// test("some test")...
// test("some another test")...
// }
// )

-- @tags is used to run test by tag
// npx playwright test @tags

-- Pause function for debugging
//...
// await page.pause()
//...